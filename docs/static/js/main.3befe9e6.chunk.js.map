{"version":3,"sources":["components/AddCategories.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","prevCategories","type","value","onChange","target","getGifs","category","a","console","log","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAmCeA,MAhCf,YAA2C,IAAlBC,EAAiB,EAAjBA,cAAiB,EAEFC,qBAFE,mBAE/BC,EAF+B,KAEnBC,EAFmB,KAgBtC,OAEI,sBAAMC,SAdW,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAc,OAAKP,GAAL,mBAAmBO,OAC/CN,EAAc,MAOlB,SACC,uBACGO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAACP,GAAMF,EAAcE,EAAEQ,OAAOF,a,+BCzBvCG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACnBC,QAAQC,IAAIH,GACNI,EAFa,iDAEmCC,UAAUL,GAF7C,+DAIAM,MAAOF,GAJP,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXtB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAAC,GAAiB,IAAfA,EAAc,EAAdA,SAAc,EAEfd,mBACtB,CACIuB,KAAK,GACLa,SAAQ,IALyB,mBAElCC,EAFkC,KAE3BC,EAF2B,KAyBzC,OAhBIC,qBAAU,WAEF1B,EAAQC,GACN0B,MAAK,SAAAC,GACFC,YAAW,WAEPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGd,UAGb,CAACtB,IAEDuB,EDtBwBM,CAAa,CAAC7B,aAAjCe,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAEpB,OACI,qCACA,6BAAKtB,IACJsB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SACSH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEXf,SAASiB,IAAgB,IAAD,EAEC5C,mBAAS,CAAC,cAFX,mBAE5B6C,EAF4B,KAEhB9C,EAFgB,KAInC,OACI,qCACA,8CACA,cAAC,EAAD,CAAeA,cAAgBA,IAC/B,uBAEA,6BAEQ8C,EAAWpB,KAAK,SAAAX,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADNA,W,MCb7BgC,IAASC,OAAO,cAACH,EAAD,IAAiBI,SAASC,eAAe,W","file":"static/js/main.3befe9e6.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction AddCategories({ setCategories }) {\r\n\r\n    const [inputValue, setInputValue] = useState();\r\n\r\n    const handleSubmit = (e) =>{\r\n\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            \r\n            setCategories(prevCategories => [inputValue,...prevCategories]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n         <input\r\n            type='text'\r\n            value={inputValue}\r\n            onChange={(e) =>{setInputValue(e.target.value)}}\r\n            />   \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategories.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategories\r\n\r\n","export const getGifs = async( category ) => {\r\n    console.log(category)\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Uz3cb8XcNqSJYlPriFLAIWrgNkjrV2VO`;\r\n    \r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__bounce'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n    const {data:images, loading} = useFetchGifs({category});\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        {loading && <p>Loading</p>}\r\n        <div className='card-grid'>\r\n                {images.map(img => (\r\n                    <GifGridItem \r\n                    key={ img.id } \r\n                    { ...img }/>\r\n                    ))\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ({ category }) =>{\r\n\r\n    const [state, setstate] = useState(\r\n        {\r\n            data:[],\r\n            loading:true\r\n        }\r\n    );\r\n\r\n        useEffect(() => {\r\n            \r\n                getGifs(category)\r\n                 .then(imgs =>{\r\n                     setTimeout(() => {\r\n                         \r\n                         setstate({\r\n                             data: imgs,\r\n                             loading: false\r\n                         });\r\n\r\n                     }, 3000);\r\n                     \r\n                    })\r\n        }, [category])\r\n\r\n    return state\r\n}","import React, {useState} from 'react'\r\nimport AddCategories from './components/AddCategories'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport default function GifExpertApp() {\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    return (\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategories setCategories={ setCategories }/>\r\n        <hr/>\r\n        \r\n        <ol>\r\n            {\r\n                categories.map( category =>\r\n                    <GifGrid \r\n                        key={category} \r\n                        category={ category }/>\r\n                )\r\n            }\r\n        </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />,document.getElementById('root'));"],"sourceRoot":""}